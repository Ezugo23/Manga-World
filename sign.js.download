// Get references to the elements

const form =document.getElementById('form');
const firstname =document.getElementById('firstname');
const secondname =document.getElementById('secondname');
const username =document.getElementById('username');
const email =document.getElementById('email');
const password = document.getElementById('password');
const cpassword = document.getElementById('cpassword');

form.addEventListener('submit', (event) =>{
  

  Validate();

  if(isFormValid()==true){
    form.submit();
  } else {
    
    event.preventDefault();
  }
});

function isFormValid() {
  const inputContainers = form.querySelectorAll('.input-control');
  let result=true;
  inputContainers.forEach((container) =>{
    if(container.classList.contains('error')) {
      result = false;
    }
  });

  return result;
} 

const isValidEmail = emailVal => {
  let atSymbol = emailVal.indexOf('@');
  if (atSymbol < 1) return false;
  let dot = emailVal.lastIndexOf('.');
  if (dot <= atSymbol + 2) return false;
  if (dot === emailVal.length - 1) return false;
  return true;
}

function Validate() {
  const firstnameVal = firstname.value.trim();
  const secondnameVal = secondname.value.trim();
  const usernameVal = username.value.trim();
  const emailVal = email.value.trim();
  const passwordVal = password.value.trim();
  const cpasswordVal = cpassword.value.trim();

  //username
  if(firstnameVal === ""){
    setError(firstname, 'first name cannot be blank');
  } else {
    setSuccess(firstname);
  }

  //lastname

  if(secondnameVal === ""){
    setError(secondname, 'second name cannot be blank');
  } else {
    setSuccess(secondname);
  }
  
  //username
  if(usernameVal === ""){
    setError(username, 'user name cannot be blank');
  } else {
    setSuccess(username);
  }

  //email

  if(emailVal === ""){
    setError(email, 'email cannot be blank');
  } else if(!isValidEmail(emailVal)){
    setError(email, 'email is not valid');
  } else{
    setSuccess(email);
  }
  
   //password

   if(passwordVal === ""){
    setError(password, 'password cannot be blank');
  } else if(passwordVal.length < 8){
    setError(password, 'min 8 char');
  } else{
    setSuccess(password);
  }
  
     //confirm password

     if(cpasswordVal === ""){
      setError(cpassword, 'confirm password cannot be blank');
    } else if(passwordVal != cpasswordVal){
      setError(cpassword, 'Not Matched');
    } else{
      setSuccess(cpassword);
    }

}
const setError = (element, message) => {
  const inputControl = element.parentElement;
  const errorDisplay = inputControl.querySelector('.error');

  errorDisplay.innerText = message;
  inputControl.classList.add('error');
  inputControl.classList.remove('success')
}

const setSuccess = element => {
  const inputControl = element.parentElement;
  const errorDisplay = inputControl.querySelector('.error');

  errorDisplay.innerText ='';
  inputControl.classList.add('success');
  inputControl.classList.remove('error');
};


